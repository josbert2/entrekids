"use strict";function toggleClassMenu(){myMenu.classList.add("menu--animatable"),myMenu.classList.contains("menu--visible")?myMenu.classList.remove("menu--visible"):(myMenu.classList.add("menu--visible"),document.querySelector(".ham").classList.remove("active"))}function OnTransitionEnd(){myMenu.classList.remove("menu--animatable")}!function(s){s.fn.animateCSS=function(t,n,i){return this.each(function(){var e=s(this);n&&"function"!=typeof n||(i=n,n=0);setTimeout(function(){e.addClass("animated "+t),"hidden"==e.css("visibility")&&e.css({visibility:"visible"}),e.is(":hidden")&&e.show(),e.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof i&&i.call(this)})},n)})}}(jQuery),$("#slider-range").slider({range:!0,min:360,max:1200,step:15,values:[360,1200],slide:function(e,t){var n=Math.floor(t.values[0]/60),i=t.values[0]-60*n;1==n.length&&(n="0"+n),1==i.length&&(i="0"+i),0==i&&(i="00"),12<=n?(12==n?n=n:n-=12,i+=" PM"):(n=n,i+=" AM"),0==n&&(n=12,i=i),$(".slider-time").html(n+":"+i);var s=Math.floor(t.values[1]/60),l=t.values[1]-60*s;1==s.length&&(s="0"+s),1==l.length&&(l="0"+l),0==l&&(l="00"),12<=s?12==s?(s=s,l+=" PM"):24==s?(s=11,l="59 PM"):(s-=12,l+=" PM"):(s=s,l+=" AM"),$(".slider-time2").html(s+":"+l)}});var myMenu=document.querySelector(".menu"),clsMenu=document.querySelector(".header-mobile"),oppMenu=document.querySelector(".ham");function toggleFilter(){filterBtn.classList.contains("active-filter")?filterBtn.classList.remove("active-filter"):filterBtn.classList.add("active-filter")}oppMenu.addEventListener("click",toggleClassMenu,!1),clsMenu.addEventListener("click",toggleClassMenu,!1);var myFilter=document.querySelector(".btn-button-filter"),filterBtn=document.querySelector(".filter-btn");myFilter.addEventListener("click",toggleFilter,!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
